openapi: "3.0.0"
info:
  version: "1.0"
  title: product-service
  description: Product service Serverless API build with AWS API Gateway and Lambda
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /products:
    get:
      summary: Returns books by config
      tags:
        - Book
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The number of page to skip before starting to collect the result set
        - in: query
          name: perPage
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        200:
          description: Array of book objects
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/definitions/Book"
          headers:
            Content-Type:
              description: Content Type header
              schema:
                type: string
            Access-Control-Allow-Origin:
              description: CORS allow origin header
              schema:
                type: string
            Access-Control-Allow-Credentials:
              description: CORS allow credentials header
              schema:
                type: boolean   
        500:
          description: Internal server error    
    post:
      summary: Create a new product in DB
      tags:
        - Book
      description: Returns created product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/CreateBook'
      responses:
        201:
          description: JSON object of created product
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid book schema
        500:
          description: Internal server error
  /products/{id}:
    get:
      summary: Get Book by id
      tags:
        - Book
      parameters:
        - name: id
          in: path
          description: Book id
          required: true
          schema:
            type: number
      responses:
        200:
          description: Book object
          content:
            application/json:
              schema:
                $ref: '#/definitions/Book'
          headers:
            Content-Type:
              description: Content Type header
              schema:
                type: string
            Access-Control-Allow-Origin:
              description: CORS allow origin header
              schema:
                type: string
            Access-Control-Allow-Credentials:
              description: CORS allow credentials header
              schema:
                type: boolean
        404:
          description: Book is not found  
        500:
          description: Internal server error
definitions:
  CreateBook:
    properties:
      title:
        type: string
      pageCount:
        type: integer  
      publishedDate: 
        type: string 
      thumbnailUrl:
        type: string
      shortDescription:
        type: string
      longDescription:
        type: string
      status:
        type: string
      authors:
        type: array
        items:
          type: string
      categories:
        type: array
        items:
          type: string
      count:
        type: number
      price:
        type: number
  Book:
    properties:
      id:
        type: string 
        format: uuid
      title:
        type: string      
      pageCount:
        type: integer  
      publishedDate: 
        type: string 
      thumbnailUrl:
        type: string
      shortDescription:
        type: string
      longDescription:
        type: string
      status:
        type: string
      authors:
        type: array
        items:
          type: string
      categories:
        type: array
        items:
          type: string
      count:
        type: number
      price:
        type: number
